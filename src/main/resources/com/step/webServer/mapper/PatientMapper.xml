<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.step.webServer.mapper.PatientMapper">
    <cache-ref namespace="com.step.webServer.mapper" />
    <select id="numPatientsByUsername" resultType="java.lang.Integer">
      select count(distinct patient.patient_id)
      from user, patient
      where user.team_id = patient.team_id
        and user.username = #{username}
    </select>
    <select id="numNewPatientsByUsername" resultType="java.lang.Integer">
      select count(distinct patient.patient_id)
      from user, patient
      where user.team_id = patient.team_id
        and user.username = #{username}
      and patient.create_datetime > DATE_SUB(NOW(), INTERVAL 1 MONTH)
    </select>
    <sql id="bpTarget">
        select B.create_datetime, B.patient_id, sbp_target, dbp_target
        from (select max(create_datetime) as create_datetime, patient_id
              from followup group by patient_id) as A,
             followup as B
        where A.patient_id = B.patient_id and A.create_datetime = B.create_datetime
    </sql>
    <select id="numPatientsWithInvalidBpByUsername" resultType="java.lang.Integer">
        select count(distinct bprecord.patient_id) from bprecord,
                                                        (<include refid="bpTarget"/>) as C,
                                                        user,
                                                        patient
        where bprecord.create_datetime > C.create_datetime
        and bprecord.patient_id = C.patient_id
        and (bprecord.dbp > C.dbp_target
               or
             bprecord.sbp > C.sbp_target)
        and bprecord.patient_id = patient.patient_id
        and patient.team_id = user.team_id
        and user.username = #{username}
    </select>
    <select id="numNewPatientsNotTestedByUsername" resultType="java.lang.Integer">
        select count(distinct patient.patient_id)
        from user left join patient on user.team_id = patient.team_id
        where user.username = #{username}
        and patient.create_datetime > DATE_SUB(NOW(), INTERVAL 1 MONTH)
        and not exists(select bprecord_id from bprecord
                        where bprecord.create_datetime > DATE_SUB(NOW(), INTERVAL 3 DAY )
                        and patient.patient_id = bprecord.patient_id)
    </select>
    <select id="selectAllPatients">
        select patient.*
        from user, patient
        where user.team_id = patient.team_id
          and user.username = #{username}
    </select>

</mapper>
